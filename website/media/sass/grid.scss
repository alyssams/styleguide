/* main grid */
$default-columns: 12;
$total-columns: $default-columns;
$column-width: 4.27%;
$gutter-width: 3.75%;
$grid-padding: $gutter-width;

/* break points */
$small-min: 0px;
$small-max: 640px;
$medium-min: 641px;
$medium-mid: 767px;
$medium-max: 959px;
$large-min: 960px;
$large-max: 1204px;
$extra-large-min: 1205px;
$large-near-med: 1050px;
$grid-max: $large-max;
$full-bleed-width: 1312px;

// Bit of a change in semantics here. The goal is to support mobile first.
// I'm using bootstrap convention as a base so the folllowing breakpoints
// will need to map slightly differently:
//   - xs (extra small) is 0 to (small-max - 1) - NOTE: we dont actually need a breakpoint for this since we should be using a mobile-first approach.
//   - sm (small) is small-max and up
//   - lg (large) is large-min and up
//   - xl (extra large) is extra-large-min and up
@mixin sm-up ($columns: $default-columns) {
    // [R4EE-411] Adding 1 to *-max to make breaks inline with pointbreak.js
    @media (min-width: $small-max + 1) { @content; }
}

@mixin md-up ($columns: $default-columns) {
    // [R4EE-411] Adding 1 to *-max to make breaks inline with pointbreak.js
    @media (min-width: $large-min + 1) { @content; }
}

@mixin lg-up ($columns: $default-columns) {
    // [R4EE-411] Adding 1 to *-max to make breaks inline with pointbreak.js
    @media (min-width: $extra-large-min + 1) { @content; }
}